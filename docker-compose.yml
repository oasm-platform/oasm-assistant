services:
  chromadb:
    image: chromadb/chroma:0.6.3
    container_name: chromadb
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - chroma_data:/chroma_data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v2/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oasm-network

  postgresql:
    image: postgres:16-alpine
    container_name: postgresql
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oasm-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oasm-backend
    ports:
      - "8080:8000"
    env_file:
      - .env
    depends_on:
      postgresql:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - oasm-network

networks:
  oasm-network:
    driver: bridge

volumes:
  chroma_data:
  postgres_data:
