# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.protos import assistant_pb2 as app_dot_protos_dot_assistant__pb2


class HealthCheckStub(object):
    """----------------
    Health Check
    ----------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HealthCheck = channel.unary_unary(
                '/app.HealthCheck/HealthCheck',
                request_serializer=app_dot_protos_dot_assistant__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.HealthCheckResponse.FromString,
                )


class HealthCheckServicer(object):
    """----------------
    Health Check
    ----------------
    """

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HealthCheckServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.HealthCheckRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.HealthCheck', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HealthCheck(object):
    """----------------
    Health Check
    ----------------
    """

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.HealthCheck/HealthCheck',
            app_dot_protos_dot_assistant__pb2.HealthCheckRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.HealthCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DomainClassifyStub(object):
    """----------------
    Domain Classify
    ----------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DomainClassify = channel.unary_unary(
                '/app.DomainClassify/DomainClassify',
                request_serializer=app_dot_protos_dot_assistant__pb2.DomainClassifyRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.DomainClassifyResponse.FromString,
                )


class DomainClassifyServicer(object):
    """----------------
    Domain Classify
    ----------------
    """

    def DomainClassify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DomainClassifyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DomainClassify': grpc.unary_unary_rpc_method_handler(
                    servicer.DomainClassify,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.DomainClassifyRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.DomainClassifyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.DomainClassify', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DomainClassify(object):
    """----------------
    Domain Classify
    ----------------
    """

    @staticmethod
    def DomainClassify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.DomainClassify/DomainClassify',
            app_dot_protos_dot_assistant__pb2.DomainClassifyRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.DomainClassifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class NucleiTemplateServiceStub(object):
    """----------------
    Nuclei template gen 
    ----------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTemplate = channel.unary_unary(
                '/app.NucleiTemplateService/CreateTemplate',
                request_serializer=app_dot_protos_dot_assistant__pb2.CreateTemplateRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.CreateTemplateResponse.FromString,
                )


class NucleiTemplateServiceServicer(object):
    """----------------
    Nuclei template gen 
    ----------------
    """

    def CreateTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NucleiTemplateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTemplate,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.CreateTemplateRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.CreateTemplateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.NucleiTemplateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NucleiTemplateService(object):
    """----------------
    Nuclei template gen 
    ----------------
    """

    @staticmethod
    def CreateTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.NucleiTemplateService/CreateTemplate',
            app_dot_protos_dot_assistant__pb2.CreateTemplateRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.CreateTemplateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ConversationServiceStub(object):
    """----------------
    Conversation
    ----------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConversations = channel.unary_unary(
                '/app.ConversationService/GetConversations',
                request_serializer=app_dot_protos_dot_assistant__pb2.GetConversationsRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.GetConversationsResponse.FromString,
                )
        self.UpdateConversation = channel.unary_unary(
                '/app.ConversationService/UpdateConversation',
                request_serializer=app_dot_protos_dot_assistant__pb2.UpdateConversationRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.UpdateConversationResponse.FromString,
                )
        self.DeleteConversation = channel.unary_unary(
                '/app.ConversationService/DeleteConversation',
                request_serializer=app_dot_protos_dot_assistant__pb2.DeleteConversationRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.DeleteConversationResponse.FromString,
                )
        self.DeleteConversations = channel.unary_unary(
                '/app.ConversationService/DeleteConversations',
                request_serializer=app_dot_protos_dot_assistant__pb2.DeleteConversationsRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.DeleteConversationsResponse.FromString,
                )


class ConversationServiceServicer(object):
    """----------------
    Conversation
    ----------------
    """

    def GetConversations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConversations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConversationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversations,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.GetConversationsRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.GetConversationsResponse.SerializeToString,
            ),
            'UpdateConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConversation,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.UpdateConversationRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.UpdateConversationResponse.SerializeToString,
            ),
            'DeleteConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConversation,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.DeleteConversationRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.DeleteConversationResponse.SerializeToString,
            ),
            'DeleteConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConversations,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.DeleteConversationsRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.DeleteConversationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.ConversationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConversationService(object):
    """----------------
    Conversation
    ----------------
    """

    @staticmethod
    def GetConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.ConversationService/GetConversations',
            app_dot_protos_dot_assistant__pb2.GetConversationsRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.GetConversationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.ConversationService/UpdateConversation',
            app_dot_protos_dot_assistant__pb2.UpdateConversationRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.UpdateConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.ConversationService/DeleteConversation',
            app_dot_protos_dot_assistant__pb2.DeleteConversationRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.DeleteConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.ConversationService/DeleteConversations',
            app_dot_protos_dot_assistant__pb2.DeleteConversationsRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.DeleteConversationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MessageServiceStub(object):
    """----------------
    Message
    ----------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMessages = channel.unary_unary(
                '/app.MessageService/GetMessages',
                request_serializer=app_dot_protos_dot_assistant__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.GetMessagesResponse.FromString,
                )
        self.CreateMessage = channel.unary_unary(
                '/app.MessageService/CreateMessage',
                request_serializer=app_dot_protos_dot_assistant__pb2.CreateMessageRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.CreateMessageResponse.FromString,
                )
        self.UpdateMessage = channel.unary_unary(
                '/app.MessageService/UpdateMessage',
                request_serializer=app_dot_protos_dot_assistant__pb2.UpdateMessageRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.UpdateMessageResponse.FromString,
                )
        self.DeleteMessage = channel.unary_unary(
                '/app.MessageService/DeleteMessage',
                request_serializer=app_dot_protos_dot_assistant__pb2.DeleteMessageRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.DeleteMessageResponse.FromString,
                )


class MessageServiceServicer(object):
    """----------------
    Message
    ----------------
    """

    def GetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.GetMessagesRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.GetMessagesResponse.SerializeToString,
            ),
            'CreateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessage,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.CreateMessageRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.CreateMessageResponse.SerializeToString,
            ),
            'UpdateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMessage,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.UpdateMessageRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.UpdateMessageResponse.SerializeToString,
            ),
            'DeleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessage,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.DeleteMessageRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.DeleteMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.MessageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageService(object):
    """----------------
    Message
    ----------------
    """

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MessageService/GetMessages',
            app_dot_protos_dot_assistant__pb2.GetMessagesRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.GetMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MessageService/CreateMessage',
            app_dot_protos_dot_assistant__pb2.CreateMessageRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.CreateMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MessageService/UpdateMessage',
            app_dot_protos_dot_assistant__pb2.UpdateMessageRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.UpdateMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MessageService/DeleteMessage',
            app_dot_protos_dot_assistant__pb2.DeleteMessageRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.DeleteMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MCPServerServiceStub(object):
    """----------------
    MCP Server
    ----------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddMCPServer = channel.unary_unary(
                '/app.MCPServerService/AddMCPServer',
                request_serializer=app_dot_protos_dot_assistant__pb2.AddMCPServerRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.AddMCPServerResponse.FromString,
                )
        self.ListMCPServers = channel.unary_unary(
                '/app.MCPServerService/ListMCPServers',
                request_serializer=app_dot_protos_dot_assistant__pb2.ListMCPServersRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.ListMCPServersResponse.FromString,
                )
        self.UpdateMCPServer = channel.unary_unary(
                '/app.MCPServerService/UpdateMCPServer',
                request_serializer=app_dot_protos_dot_assistant__pb2.UpdateMCPServerRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.UpdateMCPServerResponse.FromString,
                )
        self.DeleteMCPServer = channel.unary_unary(
                '/app.MCPServerService/DeleteMCPServer',
                request_serializer=app_dot_protos_dot_assistant__pb2.DeleteMCPServerRequest.SerializeToString,
                response_deserializer=app_dot_protos_dot_assistant__pb2.DeleteMCPServerResponse.FromString,
                )


class MCPServerServiceServicer(object):
    """----------------
    MCP Server
    ----------------
    """

    def AddMCPServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMCPServers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMCPServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMCPServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MCPServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddMCPServer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMCPServer,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.AddMCPServerRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.AddMCPServerResponse.SerializeToString,
            ),
            'ListMCPServers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMCPServers,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.ListMCPServersRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.ListMCPServersResponse.SerializeToString,
            ),
            'UpdateMCPServer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMCPServer,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.UpdateMCPServerRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.UpdateMCPServerResponse.SerializeToString,
            ),
            'DeleteMCPServer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMCPServer,
                    request_deserializer=app_dot_protos_dot_assistant__pb2.DeleteMCPServerRequest.FromString,
                    response_serializer=app_dot_protos_dot_assistant__pb2.DeleteMCPServerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.MCPServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MCPServerService(object):
    """----------------
    MCP Server
    ----------------
    """

    @staticmethod
    def AddMCPServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MCPServerService/AddMCPServer',
            app_dot_protos_dot_assistant__pb2.AddMCPServerRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.AddMCPServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMCPServers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MCPServerService/ListMCPServers',
            app_dot_protos_dot_assistant__pb2.ListMCPServersRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.ListMCPServersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMCPServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MCPServerService/UpdateMCPServer',
            app_dot_protos_dot_assistant__pb2.UpdateMCPServerRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.UpdateMCPServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMCPServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.MCPServerService/DeleteMCPServer',
            app_dot_protos_dot_assistant__pb2.DeleteMCPServerRequest.SerializeToString,
            app_dot_protos_dot_assistant__pb2.DeleteMCPServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
